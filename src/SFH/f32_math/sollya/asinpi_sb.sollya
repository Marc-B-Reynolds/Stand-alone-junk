// -*- mode: c; -*- 

// attempts at spitball approximations of asinpi(x)
// can't think of an expression form that works well.
// the "magic" of making acospi(x) stems from transforming
// it to asinpi...so not too suprising. This file is
// complete junk of tinkering around.

// set up some globals
T  = floating;
E  = absolute;
B  = [|SG...|];
F  = asin(x)/pi;
tx = sqrt(1-x);
x0 = 2^-128;
x1 = 1-2^-25;

execute("util.sollya");

procedure asinpi_make(basis, r)
{
  var e,approx,p0,p1;

  print("asinpi(x) on: " @ r);
  
  approx = fpminimax(F,basis,B,r,T,E);

  display=powers!;      write("  "); approx;  // for perverted languages without hex float
  display=hexadecimal!; write("  "); approx;  // for happy languages
  display=decimal!;     write("  "); approx;  // for happy humans

  p0;
  
  display=hexadecimal!;
  e = single(dirtyinfnorm(approx-F, r));
  write("  approx abs error: ", e);
  display=decimal!;
  write(" (", e, ")\n\n");
};


// wip
procedure asinpi_build(basis, x0,x1)
{
  var r;

  r = f32_build_constrained(asin(x)/pi, basis, x0, x1, x/pi);

  print("// ~abs error =", r.aerror);
  print("// ~rel error =", r.rerror);
  //f32_print_kernel_list("f32_asin_sb_k" @ (length(c)-1) , c);
  
  return r;
};


xbasis3 = [|tx,tx*x               |];
xbasis4 = [|tx,tx*x,tx*x^2        |];
xbasis5 = [|tx,tx*x,tx*x^2,tx*x^3 |];

asinpi_build(xbasis3, 2^-128, 1-2^-25).approx;
asinpi_build(xbasis4, 2^-128, 1-2^-25).approx;
asinpi_build(xbasis5, 2^-128, 1-2^-25).approx;

quit;


// for asinpi(x) : at least it converges. sucks
// performance wise.
basis3 = [|1,x,        tx,tx*x       |];
basis4 = [|1,x,        tx,tx*x,tx*x^2|];
basis5 = [|1,x,x^2,    tx,tx*x,tx*x^2|];
basis6 = [|1,x,x^2,    tx,tx*x,tx*x^2,tx*x^3|];
basis7 = [|1,x,x^2,x^3,tx,tx*x,tx*x^2,tx*x^3|];

xe = 1-2^-25;
R = [2^-128;xe];             // abs error:

if (false) then {
asinpi_make(basis3, R); // 0x1.a22000p-12 (3.987551e-4)
asinpi_make(basis4, R); // 0x1.c563f0p-15 (5.404835e-5)
asinpi_make(basis5, R); // 0x1.4b0000p-16 (1.972914e-5)
asinpi_make(basis6, R); // 0x1.c9af1ep-19 (3.410012e-6)
asinpi_make(basis7, R); // 0x1.30bd62p-20 (1.135244e-6)
};

if (true) then {
basis3 = [|1,x,        tx,tx*x       |];
basis4 = [|1,x,        tx,tx*x,tx*x^2|];
basis5 = [|1,x,x^3,    tx,tx*x,tx*x^2|];
basis6 = [|1,x,x^3,    tx,tx*x,tx*x^2,tx*x^3|];
basis7 = [|1,x,x^3,x^5,tx,tx*x,tx*x^2,tx*x^3|];

asinpi_make(basis3, R); // 
asinpi_make(basis4, R); // 
asinpi_make(basis5, R); // 
asinpi_make(basis6, R); //
//asinpi_make(basis7, R); //
};
