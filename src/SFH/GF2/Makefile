# Dumb mini makefile just for me:
# 0) assumes clang/GCC like options
# 1) assumes building with M4RI

# if CC is the default (not environment varible nor supplied to make, then default
ifeq ($(origin CC),default)
  CC = clang-15
endif

LDLIBS = -lm -lm4ri
CFLAGS = -g -march=native -Wall -Wextra -Wconversion -Wpedantic -Wno-unused-function

#SRC    := ${wildcard *.c}
SRC     := bmat_basics.c bmat_block.c bmat_set.c bmat_mul.c bmat_print.c bmat_gauss.c bmat_transpose.c bmat_random.c bmat_ref.c bmat_m4ri.c
HEADERS := ${wildcard *.h}

ODIR    := obj
R_OBJ   := ${addprefix ${ODIR}/, ${SRC:.c=.u}}
D_OBJ   := ${addprefix ${ODIR}/, ${SRC:.c=.o}}

all:    ${ODIR} libbmat.a

debug:  ${ODIR} libbmat_d.a

depend:	.makedep

${ODIR}:
	@mkdir ${ODIR}

spew:
	@echo ${R_OBJ}

libbmat.a: ${R_OBJ}
	${AR} rcs $@ ${R_OBJ} 

libbmat_d.a: ${D_OBJ}
	${AR} rcs $@ ${D_OBJ} 

clean:
	-${RM} ${R_OBJ} ${D_OBJ}

distclean:	clean
	-${RM} .makedep *~

.makedep:
	@-echo "building dependencies"
	@-echo "# autogenerated by Makefile" > .makedep
	@$(foreach file, $(SRC), ${CC} ${IDIRS} -MM -MQ${ODIR}/${file:.c=.u}  $(file) >> .makedep;)
	@$(foreach file, $(SRC), ${CC} ${IDIRS} -MM -MQ%{ODIR}/${file:.c=.o}  $(file) >> .makedep;)

-include .makedep

${ODIR}/%.u:%.c	
	${CC} -O3 -c -I../.. -I.. ${CFLAGS} $< -o $@

${ODIR}/%.o:%.c	
	${CC} -O1 -c -I../.. -I.. ${CFLAGS} $< -o $@

.DEFAULT help:
	@echo "help            : there is no buildsystem"
	@echo " make           : builds the release library"
	@echo " make debug     : builds the debug library"
	@echo " make clean     : deletes the libraries and object files"
	@echo " make distclean : clean + kill emacs tempfiles and .makedep file"

.PHONEY: clean distclean all debug depend
